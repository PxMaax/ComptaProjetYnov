name: CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10.10"]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
          python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Test with pytest
      run: |
        pip install pytest pytest-cov
        pytest -v  --doctest-modules --junitxml=test-results.xml
    - name: Test report
      uses: dorny/test-reporter@v1
      with:
        name: Python test                  # Name of the check run which will be created
        path: '/home/runner/work/ComptaProjetYnov/ComptaProjetYnov/test-results.xml'             # Path to test results (inside artifact .zip)
        reporter: java-junit
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
    
    - name: Analysing the code with pylint
      run: |
        date=$(date +"%Y-%m-%d")
        time=$(date +"%H-%M-%S")
        branch=$(echo $GITHUB_REF | awk -F/ '{print $3}')

        pylint_result=$(pylint $(git ls-files '*.py'))

        echo "$pylint_result" > reports/pylint_result.txt

        echo -e "Date\tTime\tPush Name\tBranch" > reports/ResultLint.xlsx
        echo -e "$date\t$time\t$GITHUB_ACTOR\t$branch" >> reports/ResultLint.xlsx

    - name: Debugging
      run: |
        ls -l  # Affiche le contenu du r√©pertoire de travail
        ls -l reports  # Affiche le contenu du dossier reports
        cat reports/pylint_result.txt  # Affiche le contenu de pylint_result.txt
        cat reports/ResultLint.xlsx  # Affiche le contenu de ResultLint.xlsx
